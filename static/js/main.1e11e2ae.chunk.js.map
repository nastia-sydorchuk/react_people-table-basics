{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/Wrapper/Wrapper.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","applyClassName","props","classNames","isActive","role","to","end","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","findPerson","find","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","loading","setLoading","empty","setEmpty","error","setError","useEffect","res","length","catch","Wrapper","App","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e11e2ae.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const applyClassName = (props: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item', { 'has-background-grey-lighter': props.isActive },\n    );\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={applyClassName}\n            end\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={applyClassName}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | undefined,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      {person && (\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const findPerson = (name: string) => {\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            name, sex, born, died, motherName, fatherName,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={name}\n              className={classNames(\n                { 'has-background-warning': person.slug === slug },\n              )}\n            >\n              <td><PersonLink person={person} /></td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {motherName && findPerson(motherName)\n                  ? <PersonLink person={findPerson(motherName)} />\n                  : motherName || '-'}\n              </td>\n              <td>\n                {fatherName && findPerson(fatherName)\n                  ? <PersonLink person={findPerson(fatherName)} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(res => {\n        if (res.length === 0) {\n          setEmpty(true);\n        }\n\n        setPeople(res);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {empty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nexport const Wrapper = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <Outlet />\n    </div>\n  </main>\n);\n","import {\n  Route, Routes, Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Wrapper } from './components/Wrapper';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <Routes>\n      <Route element={<Wrapper />}>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}